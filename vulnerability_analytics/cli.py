#!/usr/bin/env python3

from array import array
import os
import click
from vulnerability_analytics.rex_api.DockerBuilder import *
from vulnerability_analytics.rex_api.VunlerabilityAnalysis import *
from archr.analyzers.rr import *


@click.group("cli")
def cli() -> None:
    """Displays information about a binary crash for given input."""

@cli.command("get", help="Displays information about the crash.")
@click.option("--binary-path", required=True, type=str, help="Desired binary path.")
@click.option("--binary-arguments", type=str)
@click.option("--binary-input", type=str)
def get(
    binary_path: str = "",
    binary_arguments: array = [],
    binary_input: str = ""
) -> None:

    image = DockerBuilder()

    # Maybe encode the crash_input into base64?

    binary_arguments_parsed = binary_arguments.split(',')

    binary_name = os.path.basename(binary_path).split('.')[0]

    print(binary_path, binary_arguments, binary_input)

    # print(binary_name)
    # print(binary_arguments)
    out_string = binary_name + ";" + binary_arguments
    # print(out_string.replace(" ", ""))
    # exit(0)
    # Parse other_arguments
    image.build_custom_image(
        binary_path, binary_name + ":crash", binary_arguments_parsed)

    analyzer = VulnerabilityAnalysis(
        image, bytes(binary_input, 'utf-8')).start()
    input("Press Enter to continue...")
    print(analyzer.export2JSON())


def main() -> None:
    cli(prog_name="vulnerability_analytics")

if __name__ == "__main__":
    main()
