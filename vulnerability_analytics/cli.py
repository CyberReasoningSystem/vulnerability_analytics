#!/usr/bin/env python3

from array import array
import os
import click
from vulnerability_analytics.rex_api.DockerBuilder import *
from vulnerability_analytics.rex_api.VunlerabilityAnalysis import *
from archr.analyzers.rr import *


@click.group("cli")
def cli() -> None:
    """Displays information about a binary crash for given input."""


@cli.command("get", help="Displays information about the crash.")
@click.option("--binary-path", required=True, type=str, help="Desired binary path.")
@click.option("--other-arguments", type=str)
@click.option("--crash-input", required=True, type=str)
def get(
    binary_path: str = None,
    other_arguments: array = [],
    crash_input: str = None
) -> None:

    image = DockerBuilder()

    # Maybe encode the crash_input into base64?

    other_arguments = other_arguments.split(',')

    binary_name = os.path.basename(binary_path).split('.')[0]

    print(binary_path, other_arguments, crash_input)

    # Parse other_arguments

    image.build_custom_image(
        binary_path, binary_name + ":crash", other_arguments)
    analyzer = VulnerabilityAnalysis(
        image, bytes(crash_input, 'utf-8')).start()
    input("Press Enter to continue...")
    print(analyzer.export2JSON())


def main() -> None:
    cli(prog_name="vulnerability_analytics")


if __name__ == "__main__":
    main()
