#include <string.h>
#include <unistd.h>
#include <algorithm>
#include <string>
#include <string_view>
#include <iostream>
#include <cctype>
#include <sstream>
#include <vector>
#include <stdlib.h>

int main(int argc, char* argv[]) {

    char read_buffer[2048] = {0};

    read(0, read_buffer, 2048);

    if(strlen(read_buffer)) {
        
        std::string string_input =std::string(read_buffer);
        std::string binary_name = string_input.substr(0, string_input.find(std::string(";")));
        std::string arguments = string_input.erase(0, binary_name.length() + std::string(";").length());
        
        arguments.erase(std::remove(arguments.begin(), arguments.end(), '\n'), arguments.cend());
        std::stringstream arguments_stream(arguments);
        int arguments_number = std::count(arguments.begin(), arguments.end(), ',');
        char** c_arguments = (char**)calloc((arguments_number + 6), sizeof(char*));
        
        c_arguments[0] = strdup("ld-linux-x86-64.so.2");
        c_arguments[1] = strdup("--library-path");
        c_arguments[2] = strdup("/");
        c_arguments[3] = strdup(binary_name.c_str());

        int count = 4;

        std::string substr;
        while(arguments_stream.good()){
            getline(arguments_stream, substr, ',');
            c_arguments[count++] = strdup(substr.c_str());
        }

        // for(int i=0;i< count;i++) {
        //     printf("%s\n", c_arguments[i]);
        // }

        return execve("ld-linux-x86-64.so.2", c_arguments, NULL);
    } 

    return 0;
}